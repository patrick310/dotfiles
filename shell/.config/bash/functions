#!/bin/bash

clone() {
    local repo=$1
    local target_dir=$SPIKES_DIR  # Default to spikes
    
    # Ask where to put it
    echo "Clone to: [s]pikes (default), [p]ersonal, [w]ork, [f]orks?"
    read -n 1 -r choice
    echo
    
    case $choice in
        p) target_dir="$CODE_DIR/personal" ;;
        w) target_dir="$CODE_DIR/work" ;;
        f) target_dir="$CODE_DIR/forks" ;;
        *) target_dir="$SPIKES_DIR" ;;
    esac
    
    cd "$target_dir"
    git clone "$repo"
    cd "$(basename "$repo" .git)"
}

proj() {
    local dir=$(find $CODE_DIR -maxdepth 2 -type d | fzf)
    [ -n "$dir" ] && cd "$dir"
}

# Extract any archive
extract() {
    if [ -f $1 ]; then
        case $1 in
            *.tar.bz2)   tar xjf $1     ;;
            *.tar.gz)    tar xzf $1     ;;
            *.tar.xz)    tar xJf $1     ;;
            *.bz2)       bunzip2 $1     ;;
            *.rar)       unrar e $1     ;;
            *.gz)        gunzip $1      ;;
            *.tar)       tar xf $1      ;;
            *.tbz2)      tar xjf $1     ;;
            *.tgz)       tar xzf $1     ;;
            *.zip)       unzip $1       ;;
            *.Z)         uncompress $1  ;;
            *.7z)        7z x $1        ;;
            *)     echo "'$1' cannot be extracted" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

# Make and cd into directory
mkcd() {
    mkdir -p "$1" && cd "$1"
}

# cd and ls
cl() {
    cd "$1" && ls -la
}

# Search history
h() {
    history | grep -i "$1"
}

# Find file by name in current dir
f() {
    find . -iname "*$1*"
}

# Quick backup
backup() {
    cp "$1" "$1.bak.$(date +%Y%m%d-%H%M%S)"
}

# Git commit with message
gcm() {
    git commit -m "$*"
}

# What's eating my disk?
diskusage() {
    du -h ${1:-.} | sort -rh | head -20
}